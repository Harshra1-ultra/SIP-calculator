<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SIP Calculator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom font */
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-500 to-purple-600 min-h-screen flex items-center justify-center p-4">
    <div class="bg-white p-8 rounded-xl shadow-2xl w-full max-w-md">
        <h1 class="text-3xl font-bold text-center text-gray-800 mb-6">SIP Calculator</h1>

        <div class="space-y-4">
            <div>
                <label for="monthlyAmount" class="block text-gray-700 text-sm font-medium mb-1">Monthly Investment Amount (₹)</label>
                <input type="number" id="monthlyAmount" value="5000" min="1"
                       class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
                       placeholder="e.g., 5000">
            </div>
            <div>
                <label for="annualReturn" class="block text-gray-700 text-sm font-medium mb-1">Expected Annual Return Rate (%)</label>
                <input type="number" id="annualReturn" value="12" min="0" step="0.1"
                       class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
                       placeholder="e.g., 12">
            </div>
            <div>
                <label for="investmentYears" class="block text-gray-700 text-sm font-medium mb-1">Investment Duration (Years)</label>
                <input type="number" id="investmentYears" value="10" min="1"
                       class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
                       placeholder="e.g., 10">
            </div>

            <button id="calculateBtn"
                    class="w-full bg-blue-600 text-white p-3 rounded-lg font-semibold hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200 shadow-md">
                Calculate SIP
            </button>
        </div>

        <div id="results" class="mt-8 space-y-3 p-6 bg-blue-50 rounded-xl shadow-inner hidden">
            <h2 class="text-xl font-bold text-gray-800 mb-4">Your Investment Summary</h2>
            <div class="flex justify-between items-center text-gray-700">
                <span class="font-medium">Total Amount Invested:</span>
                <span id="totalInvested" class="font-bold text-lg text-green-700">₹0</span>
            </div>
            <div class="flex justify-between items-center text-gray-700">
                <span class="font-medium">Total Returns (Maturity Amount):</span>
                <span id="totalReturns" class="font-bold text-lg text-blue-700">₹0</span>
            </div>
            <div class="flex justify-between items-center text-gray-700">
                <span class="font-medium">Total Profit:</span>
                <span id="totalProfit" class="font-bold text-lg text-purple-700">₹0</span>
            </div>
        </div>

        <div id="errorMessage" class="mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-lg hidden" role="alert">
            Please enter valid positive numbers for all fields.
        </div>
    </div>

    <script>
        // Get references to HTML elements
        const monthlyAmountInput = document.getElementById('monthlyAmount');
        const annualReturnInput = document.getElementById('annualReturn');
        const investmentYearsInput = document.getElementById('investmentYears');
        const calculateBtn = document.getElementById('calculateBtn');
        const resultsDiv = document.getElementById('results');
        const totalInvestedSpan = document.getElementById('totalInvested');
        const totalReturnsSpan = document.getElementById('totalReturns');
        const totalProfitSpan = document.getElementById('totalProfit');
        const errorMessageDiv = document.getElementById('errorMessage');

        /**
         * Formats a number as Indian Rupee currency.
         * @param {number} amount - The amount to format.
         * @returns {string} The formatted currency string.
         */
        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'INR',
                minimumFractionDigits: 0, // No decimal places for whole rupees
                maximumFractionDigits: 0,
            }).format(amount);
        }

        /**
         * Calculates the SIP maturity amount, total invested, and total profit.
         */
        function calculateSIP() {
            // Get input values and convert them to numbers
            const monthlyAmount = parseFloat(monthlyAmountInput.value);
            const annualReturn = parseFloat(annualReturnInput.value);
            const investmentYears = parseFloat(investmentYearsInput.value);

            // Validate inputs
            if (isNaN(monthlyAmount) || isNaN(annualReturn) || isNaN(investmentYears) ||
                monthlyAmount <= 0 || annualReturn < 0 || investmentYears <= 0) {
                errorMessageDiv.classList.remove('hidden'); // Show error message
                resultsDiv.classList.add('hidden'); // Hide results
                return; // Exit function if inputs are invalid
            } else {
                errorMessageDiv.classList.add('hidden'); // Hide error message if inputs are valid
            }

            // Convert annual return rate to monthly interest rate
            const monthlyRate = annualReturn / 100 / 12;
            // Calculate total number of months
            const totalMonths = investmentYears * 12;

            let futureValue = 0;

            // SIP calculation formula: FV = P * (((1 + r)^n - 1) / r) * (1 + r)
            // This formula calculates the future value of a series of equal payments (annuity due)
            if (monthlyRate === 0) {
                // If interest rate is 0, future value is simply monthly amount * total months
                futureValue = monthlyAmount * totalMonths;
            } else {
                futureValue = monthlyAmount * (Math.pow(1 + monthlyRate, totalMonths) - 1) / monthlyRate * (1 + monthlyRate);
            }

            // Calculate total amount invested
            const totalInvested = monthlyAmount * totalMonths;
            // Calculate total profit
            const totalProfit = futureValue - totalInvested;

            // Display results, formatted as currency
            totalInvestedSpan.textContent = formatCurrency(totalInvested);
            totalReturnsSpan.textContent = formatCurrency(futureValue);
            totalProfitSpan.textContent = formatCurrency(totalProfit);

            // Show the results section
            resultsDiv.classList.remove('hidden');
        }

        // Add event listener to the calculate button
        calculateBtn.addEventListener('click', calculateSIP);

        // Initial calculation when the page loads with default values
        window.onload = calculateSIP;
    </script>
</body>
</html>
